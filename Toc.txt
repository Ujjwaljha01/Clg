1. GPS Module Interfacing with Raspberry Pi

import serial #import serial pacakge
from time import sleep
import webbrowser #import package for opening link in browser
import sys #import system package
def GPS_Info():
 global NMEA_buff
 global lat_in_degrees
 global long_in_degrees
 nmea_time = []
 nmea_latitude = []
 nmea_longitude = []
 nmea_time = NMEA_buff[0] #extract time from GPGGA string
 nmea_latitude = NMEA_buff[1] #extract latitude from GPGGA string
 nmea_longitude = NMEA_buff[3] #extract longitude from GPGGA string

 print("NMEA Time: ", nmea_time,'\n')
26 EDKITS ELECTRONICS
 print ("NMEA Latitude:", nmea_latitude,"NMEA Longitude:", nmea_longitude,'\n')

 lat = float(nmea_latitude) #convert string into float for calculation
 longi = float(nmea_longitude) #convertr string into float for calculation
 lat_in_degrees = convert_to_degrees(lat) #get latitude in degree decimal format
 long_in_degrees = convert_to_degrees(longi) #get longitude in degree decimal format

#convert raw NMEA string into degree decimal format
def convert_to_degrees(raw_value):
 decimal_value = raw_value/100.00
 degrees = int(decimal_value)
 mm_mmmm = (decimal_value - int(decimal_value))/0.6
 position = degrees + mm_mmmm
 position = "%.4f" %(position)
 return position

gpgga_info = "$GPGGA,"
ser = serial.Serial ("/dev/ttyUSB0") #Open port with baud rate
GPGGA_buffer = 0
NMEA_buff = 0
lat_in_degrees = 0
long_in_degrees = 0
try:
 while True:
 received_data = (str)(ser.readline ()) #read NMEA string received
 GPGGA_data_available = received_data.find(gpgga_info) #check for NMEA GPGGA string
 if (GPGGA_data_available>0):
 GPGGA_buffer = received_data.split("$GPGGA,",1)[1] #store data coming after "$GPGGA,"
 NMEA_buff = (GPGGA_buffer.split(',')) #store comma separated data in buffer
 GPS_Info() #get time, latitude, longitude
 print("lat in degrees:", lat_in_degrees," long in degree: ", long_in_degrees, '\n')
 map_link = 'http://maps.google.com/?q=' + lat_in_degrees + ',' + long_in_degrees
#create link to plot location on Google map
 print("<<<<<<<<press ctrl+c to plot location on google maps>>>>>>\n")
#press ctrl+c to plot on map and exit
 print("------------------------------------------------------------\n")

except KeyboardInterrupt:
 webbrowser.open(ma p_link) #open current position information in google map
 sys.exit(0)
#end of file

----------------------------------------------------------------------------------
2..GPIO: Program the 8x8 LED Grid Module
--------------------------------------------------------------------------------------

from luma.led_matrix.device import max7219
from luma.core.interface.serial import spi, noop
from luma.core.render import canvas
from luma.core.virtual import viewport
from luma.core.legacy import text, show_message
from luma.core.legacy.font import proportional, CP437_FONT, TINY_FONT, SINCLAIR_FONT, LCD_FONT
from datetime import datetime
import time
serial = spi(port=0, device=0, gpio=noop())
device = max7219(serial, cascaded=1, block_orientation=-90, blocks_arranged_in_reverse_order=True)
device.contrast(16)
def test():
 now = datetime.now()
# dt1_string = now.strftime("%H:%M:%S")
 dt1_string = now.strftime("%I:%M:%S")
 with canvas(device) as draw:
 text(draw, (3, 1), dt1_string, fill="white", font=proportional(TINY_FONT))
# show_message(device, "Hello EDKITS", fill="red",font=(CP437_FONT),scroll_delay=0.08)
while True:
 test()


3.TELEGRAM


import sys
import time
import random
import datetime
import telepot
import RPi.GPIO as GPIO
from telepot.loop import MessageLoop
red=23 # connect red led at pin 23 of raspberry pi
now=datetime.datetime.now()
GPIO.setmode(GPIO.BOARD)
GPIO.setwarnings(False)
GPIO.setup(red,GPIO.OUT)
GPIO.output(red,0)
def action(msg):
 chat_id = msg['chat']['id']
 command = msg['text']
 print ('Got command: %s' %command)
 if 'On' in command:
 message="Turn On"
 message=message+" red"
 GPIO.output(red,1)
 bot.sendMessage(chat_id,message)
 if 'Off' in command:
 message="Turn Off"
 message=message+" red"
 GPIO.output(red,0)
 bot.sendMessage(chat_id, message)
bot = telepot.Bot('626665131:AAHsNzQbqSj9GZ9-w2t4I') #paste your bot tokan here.
print(bot.getMe())
MessageLoop(bot,action).run_as_thread()
print ('I am listening...')
while 1:
 time.sleep(10)


/// camera


from time import sleep
from picamera import PiCamera
camera = PiCamera()
camera.resolution = (1280, 720) # selecting resolution 1280x720 px
camera.start_preview()
# Camera warm-up time
sleep(2)
camera.capture('/home/pi/Pictures/newImage.jpg') #capture and save image at specified location
camera.stop_preview()
#end of code
